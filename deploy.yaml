apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mgateway-fra-snapshot
  name: mgateway-fra-snapshot
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mgateway-fra-snapshot
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mgateway-fra-snapshot
    spec:
      imagePullSecrets:
        - name: ibm-registry-apikey
      containers:
        - image: de.icr.io/devops-tools/java11-alpine-private-certificate-cross
          name: mgateway-fra-snapshot
          ports:
            - containerPort: 8090
            resources:
              requests:
                cpu: 15m
                memory: 90Mi
              limits:
                cpu: 150m
                memory: 900Mi
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /management/health/readiness
              port: 8090
            initialDelaySeconds: 300
            periodSeconds: 5
          resources: {}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /management/health/readiness
              port: 8090
            initialDelaySeconds: 300
            periodSeconds: 5
      restartPolicy: Always

status: {}

---


apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mgateway-fra-snapshot
  name: mgateway-fra-snapshot
spec:
  ports:
    - name: "8090"
      port: 8090
      targetPort: 8090
  selector:
    io.kompose.service: mgateway-fra-snapshot
  type: ClusterIP
status:
  loadBalancer: {}


---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: mgateway-fra-snapshot
  namespace: develop
  
  generation: 4
  
  labels:
    app.kubernetes.io/instance: mgateway-fra-snapshot
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mgateway-fra-snapshot
    helm.sh/chart: mgateway-fra-snapshot
    run: mgateway-fra-snapshot
  annotations:
    kubernetes.io/ingress.class: private-iks-k8s-nginx
  managedFields:
    - manager: dashboard
      operation: Update
      apiVersion: networking.k8s.io/v1
      time: '2022-02-04T12:02:49Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/ingress.class: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:run: {}
        f:spec:
          f:rules: {}
          f:tls: {}
    - manager: nginx-ingress-controller
      operation: Update
      apiVersion: networking.k8s.io/v1
      time: '2022-05-04T13:49:57Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:loadBalancer:
            f:ingress: {}
      subresource: status
spec:
  tls:
    - hosts:
        - msa-default
      secretName: scf-hq.com
  rules:
    - host: >-
        mgateway-fra-snapshot-develop.scfhq-publiccrossdev01-391a523e0203d3683790f242c9079785-0000.eu-de.containers.appdomain.cloud
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mgateway-fra-snapshot
                port:
                  number: 8090
    - host: msa-default
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mgateway-fra-snapshot
                port:
                  number: 8090
status:
  loadBalancer:
    ingress:
      - hostname: e4b17b6a-eu-de.lb.appdomain.cloud


---


apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: mgateway-fra-snapshot
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mgateway-fra-snapshot
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50